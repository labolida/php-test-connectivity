apiVersion: v1
kind: Pod
metadata:
  name: php-test-001-pod
  namespace: test
  labels:
    tag-name: php-test-001-tag
spec:
  containers:
  - name: php-test-001-container
    image: lmldocker/php-test-connectivity:2.0
    ports:
    - containerPort: 80
    env:
    - name: TEST_HOST
      value: "php-test-001-svc"
    - name: TEST_PORT
      value: "80"
    - name: TEST_ENDPOINT
      value: "remote-content.php"
    - name: TEST_CONTENT
      value: "I-am-php-test-001-contanier"

---

apiVersion: v1
kind: Pod
metadata:
  name: php-test-002-pod
  namespace: test
  labels:
    tag-name: php-test-002-tag
spec:
  containers:
  - name: php-test-002-container
    image: lmldocker/php-test-connectivity:2.0
    ports:
    - containerPort: 80
    env:
    - name: TEST_HOST
      value: "php-test-001-svc"
    - name: TEST_PORT
      value: "80"
    - name: TEST_ENDPOINT
      value: "remote-content.php"
    - name: TEST_CONTENT
      value: "I-am-php-test-002-contanier"

---

apiVersion: v1
kind: Service
metadata:
  name: php-test-001-svc
  namespace: test
spec:
  selector:
    tag-name: php-test-001-tag
  ports:
  - protocol: TCP
    port: 80
    #targetPort: 80
  #type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: php-test-002-svc
  namespace: test
spec:
  selector:
    tag-name: php-test-002-tag
  ports:
  - protocol: TCP
    port: 80
    #targetPort: 80
  #type: NodePort

###  Type values and their behaviors are:
###      ClusterIP: Exposes the Service on a cluster-internal IP.
###      NodePort: Exposes the Service on each Node's IP at a static port (the NodePort).
###      LoadBalancer: Exposes the Service externally using a cloud provider's load balancer.
###      ExternalName: Maps the Service to the contents of the externalName field (e.g. foo.bar.example.com), by returning a CNAME record with its value. No proxying of any kind is set up.
